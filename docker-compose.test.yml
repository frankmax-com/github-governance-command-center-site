version: '3.8'

services:
  # Test Database Services
  test-mongodb:
    image: mongo:7.0
    container_name: test-governance-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: testadmin
      MONGO_INITDB_ROOT_PASSWORD: testpass
      MONGO_INITDB_DATABASE: test_governance
    ports:
      - "27018:27017"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  test-redis:
    image: redis:7.0-alpine
    container_name: test-governance-redis
    command: redis-server --appendonly yes --requirepass testredispass
    ports:
      - "6380:6379"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # GitHub API Test Service
  github-api-test-service:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: github-api-test-service
    environment:
      - MONGODB_URI=mongodb://testadmin:testpass@test-mongodb:27017/test_governance?authSource=admin
      - REDIS_URI=redis://:testredispass@test-redis:6379/0
      - SERVICE_PORT=8000
      - LOG_LEVEL=DEBUG
      - GITHUB_TOKEN=${GITHUB_TEST_TOKEN:-mock_token}
      - TESTING_MODE=true
    ports:
      - "8000:8000"
    depends_on:
      test-mongodb:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src

  # Test Runner Service
  pytest-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: pytest-runner
    environment:
      - GITHUB_API_BASE_URL=http://github-api-test-service:8000
      - TESTING_MODE=true
      - PYTEST_ARGS=${PYTEST_ARGS:--v --tb=short}
    depends_on:
      github-api-test-service:
        condition: service_healthy
    networks:
      - test-network
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
      - ./reports:/app/reports
    command: >
      sh -c "
        echo 'Waiting for services to be ready...'
        sleep 10
        echo 'Running GitHub API tests...'
        python -m pytest tests/ $$PYTEST_ARGS --junitxml=/app/reports/junit.xml --cov=src --cov-report=html:/app/reports/coverage --cov-report=term
      "

  # Integration Test Service
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: integration-tests
    environment:
      - GITHUB_API_BASE_URL=http://github-api-test-service:8000
      - TESTING_MODE=true
    depends_on:
      github-api-test-service:
        condition: service_healthy
    networks:
      - test-network
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
    command: >
      sh -c "
        echo 'Running integration tests...'
        python -m pytest tests/integration/ -v --tb=short
      "

networks:
  test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
