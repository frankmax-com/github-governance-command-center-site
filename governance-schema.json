{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AI DevOps Governance Configuration Schema",
  "description": "Schema for AI Provider Agent to generate governance configs consumed by GitHub Governance Factory",
  "type": "object",
  "required": ["governance"],
  "properties": {
    "governance": {
      "type": "object",
      "required": ["version", "metadata", "analysis", "generation"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Schema version for compatibility tracking"
        },
        "metadata": {
          "type": "object",
          "required": ["generated_by", "generated_at", "source_specs", "target_repository"],
          "properties": {
            "generated_by": {
              "type": "string", 
              "enum": ["ai-provider-agent-service"],
              "description": "Always generated by AI Provider Agent Service"
            },
            "generated_at": {
              "type": "string",
              "format": "date-time",
              "description": "ISO timestamp of config generation"
            },
            "source_specs": {
              "type": "array",
              "items": {"type": "string"},
              "description": "List of spec files analyzed by AI Provider Agent"
            },
            "target_repository": {
              "type": "object",
              "required": ["organization", "repository"],
              "properties": {
                "organization": {"type": "string"},
                "repository": {"type": "string"}
              }
            },
            "ai_analysis_summary": {
              "type": "string",
              "description": "AI Provider Agent's analysis summary of requirements"
            }
          }
        },
        "analysis": {
          "type": "object",
          "description": "AI Provider Agent's analysis results",
          "required": ["requirements_extraction", "dependency_mapping", "priority_assessment"],
          "properties": {
            "requirements_extraction": {
              "type": "object",
              "properties": {
                "business_objectives": {
                  "type": "array",
                  "items": {"type": "string"},
                  "description": "High-level business goals extracted from specs"
                },
                "technical_requirements": {
                  "type": "array", 
                  "items": {"type": "string"},
                  "description": "Technical requirements identified"
                },
                "compliance_requirements": {
                  "type": "array",
                  "items": {"type": "string"},
                  "description": "Compliance and governance requirements"
                }
              }
            },
            "dependency_mapping": {
              "type": "object",
              "properties": {
                "epic_dependencies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "epic": {"type": "string"},
                      "depends_on": {"type": "array", "items": {"type": "string"}},
                      "blocks": {"type": "array", "items": {"type": "string"}}
                    }
                  }
                },
                "critical_path": {
                  "type": "array",
                  "items": {"type": "string"},
                  "description": "Critical path epics for delivery"
                }
              }
            },
            "priority_assessment": {
              "type": "object",
              "properties": {
                "critical_epics": {"type": "array", "items": {"type": "string"}},
                "high_priority_features": {"type": "array", "items": {"type": "string"}},
                "risk_factors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "risk": {"type": "string"},
                      "impact": {"type": "string", "enum": ["low", "medium", "high", "critical"]},
                      "mitigation": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        },
        "generation": {
          "type": "object",
          "description": "Generated governance structure for execution by GitHub Governance Factory",
          "required": ["epics", "features", "labels", "milestones", "projects"],
          "properties": {
            "epics": {
              "type": "object",
              "patternProperties": {
                "^[a-z0-9-]+$": {
                  "type": "object",
                  "required": ["title", "description", "labels", "milestone", "features"],
                  "properties": {
                    "title": {"type": "string", "pattern": "^Epic: "},
                    "description": {"type": "string", "minLength": 50},
                    "labels": {
                      "type": "array",
                      "items": {"type": "string"},
                      "contains": {"const": "epic"}
                    },
                    "milestone": {"type": "string"},
                    "priority": {"type": "string", "enum": ["critical", "high", "medium", "low"]},
                    "estimated_effort": {"type": "string"},
                    "business_value": {"type": "string", "enum": ["very-high", "high", "medium", "low"]},
                    "features": {
                      "type": "array", 
                      "items": {"type": "string"},
                      "minItems": 1
                    },
                    "acceptance_criteria": {
                      "type": "array",
                      "items": {"type": "string"}
                    },
                    "success_metrics": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              }
            },
            "features": {
              "type": "object",
              "patternProperties": {
                "^[a-z0-9-]+$": {
                  "type": "object",
                  "required": ["title", "description", "labels", "parent_epic", "tasks"],
                  "properties": {
                    "title": {"type": "string", "pattern": "^Feature: "},
                    "description": {"type": "string", "minLength": 30},
                    "labels": {
                      "type": "array",
                      "items": {"type": "string"},
                      "contains": {"const": "feature"}
                    },
                    "parent_epic": {"type": "string"},
                    "priority": {"type": "string", "enum": ["critical", "high", "medium", "low"]},
                    "estimated_effort": {"type": "string"},
                    "agent_assignment": {
                      "type": "string",
                      "enum": ["orchestrator", "dev", "ai-provider", "qa", "security", "release", "pm", "audit"]
                    },
                    "tasks": {
                      "type": "array",
                      "items": {"type": "string"},
                      "minItems": 1
                    },
                    "definition_of_done": {
                      "type": "array",
                      "items": {"type": "string"}
                    },
                    "dependencies": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              }
            },
            "tasks": {
              "type": "object",
              "patternProperties": {
                "^[a-z0-9-]+$": {
                  "type": "object",
                  "required": ["title", "description", "labels", "parent_feature"],
                  "properties": {
                    "title": {"type": "string", "pattern": "^Task: "},
                    "description": {"type": "string", "minLength": 20},
                    "labels": {
                      "type": "array",
                      "items": {"type": "string"},
                      "contains": {"const": "task"}
                    },
                    "parent_feature": {"type": "string"},
                    "priority": {"type": "string", "enum": ["critical", "high", "medium", "low"]},
                    "estimated_effort": {"type": "string", "pattern": "^\\d+[hdw]$"},
                    "assignee": {"type": "string"},
                    "acceptance_criteria": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              }
            },
            "labels": {
              "type": "object",
              "required": ["work_types", "agent_services", "status_tracking", "priorities"],
              "properties": {
                "work_types": {
                  "type": "object",
                  "properties": {
                    "epic": {"$ref": "#/definitions/label"},
                    "feature": {"$ref": "#/definitions/label"},
                    "task": {"$ref": "#/definitions/label"},
                    "bug": {"$ref": "#/definitions/label"}
                  }
                },
                "agent_services": {
                  "type": "object",
                  "properties": {
                    "agent:orchestrator": {"$ref": "#/definitions/label"},
                    "agent:dev": {"$ref": "#/definitions/label"},
                    "agent:ai-provider": {"$ref": "#/definitions/label"},
                    "agent:qa": {"$ref": "#/definitions/label"},
                    "agent:security": {"$ref": "#/definitions/label"},
                    "agent:release": {"$ref": "#/definitions/label"},
                    "agent:pm": {"$ref": "#/definitions/label"},
                    "agent:audit": {"$ref": "#/definitions/label"}
                  }
                },
                "status_tracking": {
                  "type": "object",
                  "properties": {
                    "status:planning": {"$ref": "#/definitions/label"},
                    "status:in-progress": {"$ref": "#/definitions/label"},
                    "status:review": {"$ref": "#/definitions/label"},
                    "status:done": {"$ref": "#/definitions/label"},
                    "status:blocked": {"$ref": "#/definitions/label"}
                  }
                },
                "priorities": {
                  "type": "object",
                  "properties": {
                    "priority:critical": {"$ref": "#/definitions/label"},
                    "priority:high": {"$ref": "#/definitions/label"},
                    "priority:medium": {"$ref": "#/definitions/label"},
                    "priority:low": {"$ref": "#/definitions/label"}
                  }
                }
              }
            },
            "milestones": {
              "type": "object",
              "patternProperties": {
                "^[qQ][1-4]-\\d{4}$": {
                  "type": "object",
                  "required": ["title", "description", "due_date", "epics"],
                  "properties": {
                    "title": {"type": "string"},
                    "description": {"type": "string"},
                    "due_date": {"type": "string", "format": "date"},
                    "state": {"type": "string", "enum": ["open", "closed"]},
                    "epics": {
                      "type": "array",
                      "items": {"type": "string"}
                    },
                    "success_criteria": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              }
            },
            "projects": {
              "type": "object",
              "required": ["portfolio_governance", "epic_planning", "sprint_management"],
              "properties": {
                "portfolio_governance": {
                  "$ref": "#/definitions/project_template",
                  "properties": {
                    "template": {"const": "roadmap"}
                  }
                },
                "epic_planning": {
                  "$ref": "#/definitions/project_template",
                  "properties": {
                    "template": {"const": "feature planning"}
                  }
                },
                "sprint_management": {
                  "$ref": "#/definitions/project_template",
                  "properties": {
                    "template": {"const": "team planning"}
                  }
                },
                "infrastructure_board": {
                  "$ref": "#/definitions/project_template",
                  "properties": {
                    "template": {"const": "task board"}
                  }
                },
                "security_compliance": {
                  "$ref": "#/definitions/project_template", 
                  "properties": {
                    "template": {"const": "bug triage"}
                  }
                },
                "release_management": {
                  "$ref": "#/definitions/project_template",
                  "properties": {
                    "template": {"const": "release planning"}
                  }
                }
              }
            }
          }
        },
        "execution_config": {
          "type": "object",
          "description": "Configuration for GitHub Governance Factory execution",
          "properties": {
            "create_projects": {"type": "boolean", "default": true},
            "create_issues": {"type": "boolean", "default": true},
            "apply_labels": {"type": "boolean", "default": true},
            "link_milestones": {"type": "boolean", "default": true},
            "setup_automation": {"type": "boolean", "default": true},
            "dry_run": {"type": "boolean", "default": false},
            "batch_size": {"type": "integer", "minimum": 1, "maximum": 50, "default": 10},
            "rate_limit_delay": {"type": "integer", "minimum": 0, "maximum": 5000, "default": 1000}
          }
        }
      }
    }
  },
  "definitions": {
    "label": {
      "type": "object",
      "required": ["color", "description"],
      "properties": {
        "color": {
          "type": "string",
          "pattern": "^[0-9A-Fa-f]{6}$",
          "description": "Hex color code without # prefix"
        },
        "description": {
          "type": "string",
          "minLength": 5,
          "maxLength": 100
        }
      }
    },
    "project_template": {
      "type": "object",
      "required": ["name", "template", "description"],
      "properties": {
        "name": {"type": "string"},
        "template": {
          "type": "string",
          "enum": ["roadmap", "feature planning", "team planning", "task board", "bug triage", "release planning"]
        },
        "description": {"type": "string"},
        "automation_rules": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    }
  }
}
